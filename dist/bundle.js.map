{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://weblogger/./src/IndexDB.js","webpack://weblogger/./src/index.js","webpack://weblogger/./src/utils.js","webpack://weblogger/webpack/bootstrap","webpack://weblogger/webpack/startup"],"sourcesContent":["class IndexedDBDatabase {\n\tconstructor(databaseName, objectStoreName) {\n\t\tthis.prefix = '[LogIndexedDBSDK] :';\n\t\tthis.databaseName = databaseName;\n\t\tthis.objectStoreName = objectStoreName;\n\t\tthis.db = null;\n\t}\n\n\topenDatabase() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst request = window.indexedDB.open(this.databaseName);\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\tconsole.error(`${this.prefix} Failed to open database: ${event.target.error}`);\n\t\t\t\treject(event.target.error);\n\t\t\t};\n\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tthis.db = event.target.result;\n\t\t\t\tconsole.log(`${this.prefix} Open database ${this.databaseName} successfully.`);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onupgradeneeded = (event) => {\n\t\t\t\tconst db = event.target.result;\n\n\t\t\t\tif (!db.objectStoreNames.contains(this.objectStoreName)) {\n\n\t\t\t\t\tconst OS = db.createObjectStore(this.objectStoreName, { keyPath : 'id', autoIncrement : true })\n\n\t\t\t\t\tOS.createIndex('byId', 'id', { unique : true })\n\t\t\t\t\tOS.createIndex('byTimestamp', 'timestamp')\n\t\t\t\t\tOS.createIndex('byModule', 'module')\n\t\t\t\t\tOS.createIndex('byUserId', 'userId')\n\t\t\t\t\tOS.createIndex('byClientId', 'clientId')\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\texecuteQuery(request, successCallback, errorCallback) {\n\t\trequest.onsuccess = (event) => {\n\t\t\tif (successCallback) {\n\t\t\t\tsuccessCallback(event.target.result);\n\t\t\t}\n\t\t};\n\n\t\trequest.onerror = (event) => {\n\t\t\tconsole.error(`${this.prefix} Error executing query: ${event.target.error}`);\n\t\t\tif (errorCallback) {\n\t\t\t\terrorCallback(event.target.error);\n\t\t\t}\n\t\t};\n\t}\n\n\tcreateTransaction(mode) {\n\t\tconst transaction = this.db.transaction(this.objectStoreName, mode);\n\t\t\n\t\treturn transaction.objectStore(this.objectStoreName);\n\t}\n\n\tcreateTable(successCallback, errorCallback) {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst request = this.openDatabase();\n\n\t\t\trequest.then(() => {\n\t\t\t\tresolve();\n\n\t\t\t\tif (successCallback) {\n\t\t\t\t\tsuccessCallback();\n\t\t\t\t}\n\t\t\t}).catch((error) => {\n\t\t\t\treject(error);\n\n\t\t\t\tif (errorCallback) {\n\t\t\t\t\terrorCallback(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tinsertData(data, successCallback, errorCallback) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst objectStore = this.createTransaction('readwrite');\n\t\t\tconst request = objectStore.add(data);\n\n\t\t\tthis.executeQuery(request, () => {\n\t\t\t\tconsole.log(`${this.prefix} Data inserted successfully.`);\n\t\t\t\tresolve();\n\n\t\t\t\tif (successCallback) {\n\t\t\t\t\tsuccessCallback();\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treject(error);\n\n\t\t\t\tif (errorCallback) {\n\t\t\t\t\terrorCallback(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tselectData(condition, successCallback, errorCallback) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst objectStore = this.createTransaction('readonly');\n\t\t\tconst results = [];\n    \n\t\t\tconst request = objectStore.openCursor();\n  \n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tconst cursor = event.target.result;\n  \n\t\t\t\tif (cursor) {\n\t\t\t\t\tconst logEntry = cursor.value;\n\t\t\t\t\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t(!condition.module || logEntry.module === condition.module) &&\n            (!condition.level || logEntry.level === condition.level) &&\n            (!condition.userId || logEntry.userId === condition.userId) &&\n            (!condition.clientId || logEntry.clientId === condition.clientId)\n\t\t\t\t\t) {\n\t\t\t\t\t\tresults.push(logEntry);\n\t\t\t\t\t}\n  \n\t\t\t\t\tcursor.continue();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(`${this.prefix} Selected data:`, results);\n\t\t\t\t\tresolve(results);\n  \n\t\t\t\t\tif (successCallback) {\n\t\t\t\t\t\tsuccessCallback(results);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n  \n\t\t\trequest.onerror = (event) => {\n\t\t\t\treject(event.target.error);\n  \n\t\t\t\tif (errorCallback) {\n\t\t\t\t\terrorCallback(event.target.error);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n  \n\tupdateData(condition, newData, successCallback, errorCallback) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst objectStore = this.createTransaction('readwrite');\n\t\t\tconst request = objectStore.openCursor(IDBKeyRange.only(condition));\n\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tconst cursor = event.target.result;\n\n\t\t\t\tif (cursor) {\n\t\t\t\t\tconst updateRequest = cursor.update(newData);\n\n\t\t\t\t\tthis.executeQuery(updateRequest, () => {\n\t\t\t\t\t\tconsole.log(`${this.prefix} Data updated successfully.`);\n\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\tif (successCallback) {\n\t\t\t\t\t\t\tsuccessCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\treject(error);\n\n\t\t\t\t\t\tif (errorCallback) {\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(`${this.prefix} No data found for update.`);\n\t\t\t\t\tresolve();\n\n\t\t\t\t\tif (successCallback) {\n\t\t\t\t\t\tsuccessCallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\treject(event.target.error);\n\n\t\t\t\tif (errorCallback) {\n\t\t\t\t\terrorCallback(event.target.error);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\tdeleteData(condition, successCallback, errorCallback) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst objectStore = this.createTransaction('readwrite');\n\t\t\tconst request = objectStore.openCursor(IDBKeyRange.only(condition));\n\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tconst cursor = event.target.result;\n\n\t\t\t\tif (cursor) {\n\t\t\t\t\tconst deleteRequest = cursor.delete();\n\n\t\t\t\t\tthis.executeQuery(deleteRequest, () => {\n\t\t\t\t\t\tconsole.log(`${this.prefix} Data deleted successfully.`);\n\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\tif (successCallback) {\n\t\t\t\t\t\t\tsuccessCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\treject(error);\n\n\t\t\t\t\t\tif (errorCallback) {\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(`${this.prefix} No data found for delete.`);\n\t\t\t\t\tresolve();\n\n\t\t\t\t\tif (successCallback) {\n\t\t\t\t\t\tsuccessCallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\treject(event.target.error);\n\n\t\t\t\tif (errorCallback) {\n\t\t\t\t\terrorCallback(event.target.error);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n}\n\nmodule.exports = IndexedDBDatabase;\n","const IndexedDBDatabase = require('./IndexDB');\nconst Utils = require('./utils');\n\nclass LoggerModule {\n\tconstructor({ moduleName, Logger }) {\n\t\tthis.moduleName = moduleName\n\t\tthis.Logger = Logger\n\t}\n\tinfo(message) {\n\t\tconsole.log(`[Info] [${this.moduleName}] ${message}`)\n\t\tthis.Logger(this.moduleName, 'Info', message)\n\t}\n\n\twarn(message) {\n\t\tconsole.log(`[Warn] [${this.moduleName}] ${message}`)\n\t\tthis.Logger(this.moduleName, 'Warn', message)\n\t}\n}\n\nclass Logger {\n\tconstructor(props) {\n\t\tconst {\n\t\t\tCollectionName = 'logs',\n\t\t\tDatabaseName = 'MyDatabase',\n\t\t\tObjectStoreName = 'logs',\n\t\t\tUserId = 'UNKNOWN',\n\t\t\tClientId = 'UNKNOWN',\n\t\t\tModules = []\n\t\t} = props;\n\n\t\tthis.CollectionName = CollectionName;\n\t\tthis.DatabaseName = DatabaseName;\n\t\tthis.ObjectStoreName = ObjectStoreName;\n\t\tthis.UserId = UserId;\n\t\tthis.ClientId = ClientId;\n\n\t\tconsole.log(this.ClientId)\n\n\t\tthis.prefix = '[LogSystem] : ';\n\t\tconsole.log(`${this.prefix}Logger initialized.`);\n\t\tthis.connect();\n\t\tthis.initModules(Modules);\n\t}\n\n\tconnect() {\n\t\tthis.dbClient = new IndexedDBDatabase(this.DatabaseName, this.ObjectStoreName);\n\t\tthis.dbClient\n\t\t\t.openDatabase()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(`${this.prefix}Connected to IndexedDB.`);\n\t\t\t\tthis.createTable();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(`${this.prefix}Error connecting to IndexedDB:`, error);\n\t\t\t});\n\t}\n\n\tinitModules(modules) {\n\t\tmodules.forEach((module) => {\n\t\t\tthis[module] = new LoggerModule({ moduleName : module, Logger : this.logger.bind(this) });\n\t\t});\n\t}\n\n\tcreateTable() {\n\t\tthis.dbClient\n\t\t\t.createTable()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(`${this.prefix}Logs table created successfully.`);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(`${this.prefix}Error creating logs table:`, error);\n\t\t\t});\n\t}\n\n\tlogger(module, level, content) {\n\t\tconst data = {\n\t\t\tuserId    : this.UserId,\n\t\t\tclientId  : this.ClientId,\n\t\t\tmodule    : module, \n\t\t\tlevel     : level,\n\t\t\ttimestamp : Utils.getFormattedDate(),\n\t\t\tmessage   : content,\n\t\t\tisUpload  : false,\n\t\t\tdata      : { key : 'value' }\n\t\t}\n\n\t\tthis.dbClient\n\t\t\t.insertData(data)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(`${this.prefix}Log inserted successfully.`);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(`${this.prefix}Error inserting log:`, error);\n\t\t\t});\n\t}\n\n\tgetLogs(test, successCallback, errorCallback) {\n\t\t// const condition = new Date().toISOString(); // 获取当前时间\n\n\t\tthis.dbClient.selectData({\n\t\t\tuserId : 'Huangliang'\n\t\t}, successCallback, errorCallback)\n\t\t\t.then((logs) => {\n\t\t\t\tconsole.log('Retrieved logs:', logs);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error getting logs:', error);\n\t\t\t});\n\t}\n}\n\nwindow.Logger = Logger;\n\nmodule.exports = Logger;\n","class Utils {\n\tstatic getFormattedDate() {\n\t\tconst currentDate = new Date();\n\n\t\tconst year = currentDate.getFullYear();\n\t\tconst month = String(currentDate.getMonth() + 1).padStart(2, '0'); \n\t\tconst day = String(currentDate.getDate()).padStart(2, '0');\n\t\tconst hours = String(currentDate.getHours()).padStart(2, '0');\n\t\tconst minutes = String(currentDate.getMinutes()).padStart(2, '0');\n\t\tconst seconds = String(currentDate.getSeconds()).padStart(2, '0');\n\t\tconst milliseconds = String(currentDate.getMilliseconds()).padStart(3, '0');\n\n\t\tconst formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}.${milliseconds}`;\n\n\t\treturn formattedDate\n\n\t}\n\n\tstatic generateRandomString(length) {\n\t\tconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t\tlet result = '';\n  \n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst randomIndex = Math.floor(Math.random() * characters.length);\n\n\t\t\tresult += characters.charAt(randomIndex);\n\t\t}\n  \n\t\treturn result;\n\t}\n}\n\nmodule.exports = Utils","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(352);\n"],"names":["IndexedDBDatabase","databaseName","objectStoreName","_classCallCheck","this","prefix","db","key","value","_this","Promise","resolve","reject","request","window","indexedDB","open","onerror","event","console","error","concat","target","onsuccess","result","log","onupgradeneeded","objectStoreNames","contains","OS","createObjectStore","keyPath","autoIncrement","createIndex","unique","successCallback","errorCallback","_this2","mode","transaction","objectStore","_this3","openDatabase","then","data","_this4","createTransaction","add","executeQuery","condition","_this5","results","openCursor","cursor","logEntry","module","level","userId","clientId","push","newData","_this6","IDBKeyRange","only","updateRequest","update","_this7","deleteRequest","exports","require","Utils","LoggerModule","_ref","moduleName","Logger","_createClass","message","props","_props$CollectionName","CollectionName","_props$DatabaseName","DatabaseName","_props$ObjectStoreNam","ObjectStoreName","_props$UserId","UserId","_props$ClientId","ClientId","_props$Modules","Modules","connect","initModules","dbClient","createTable","modules","forEach","logger","bind","content","timestamp","getFormattedDate","isUpload","insertData","test","selectData","logs","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","length","i","randomIndex","Math","floor","characters","random","charAt","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}